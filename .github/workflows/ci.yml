name: Run tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_USE_SSL: ${{ secrets.EMAIL_USE_SSL }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
      FILE_UPLOAD_STORAGE: ${{ secrets.FILE_UPLOAD_STORAGE }}
      AWS_PRESIGNED_EXPIRY: ${{ secrets.AWS_PRESIGNED_EXPIRY }}
      AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
      AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
      AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      AWS_DEFAULT_ACL: ${{ secrets.AWS_DEFAULT_ACL }}
      AWS_S3_SIGNATURE_VERSION: ${{ secrets.AWS_S3_SIGNATURE_VERSION }}
      DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/test'
      PAYSTACK_SECRET_KEY: ${{ secrets.PAYSTACK_SECRET_KEY }}
      PAYSTACK_TEST_SECRET_KEY: ${{ secrets.PAYSTACK_TEST_SECRET_KEY }}
      PAYSTACK_LIVE_SECRET_KEY: ${{ secrets.PAYSTACK_LIVE_SECRET_KEY }}
      IMAGE_KIT_PRIVATE_KEY: ${{ secrets.IMAGE_KIT_PRIVATE_KEY }}
      IMAGE_KIT_PUBLIC_KEY: ${{ secrets.IMAGE_KIT_PUBLIC_KEY }}
      IMAGE_KIT_URL_ENDPOINT: ${{ secrets.IMAGE_KIT_URL_ENDPOINT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      ENVIRONMENT: 'dev'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Pipenv
        run: pip install pipenv

      - name: Clear Pipenv Cache
        run: rm -rf ~/.local/share/virtualenvs

      - name: Configure Pipenv to Use Python 3.12
        run: pipenv --python $(which python)

      - name: Install Dependencies
        run: pipenv sync --dev

      - name: Debug Environment
        run: |
          python --version
          pipenv --venv || echo "Virtual environment not found"
          ls -al ~/.local/share/virtualenvs || echo "No cached virtualenvs"

      - name: Running Django migrations check
        run: pipenv run python manage.py makemigrations --check --dry-run

      - name: Run tests
        run: |
          pipenv run python manage.py migrate --noinput
          pipenv run pytest
